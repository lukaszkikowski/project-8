var version = "8"; self.addEventListener("install", function (e) { console.log("WORKER: install event in progress.", e), e.waitUntil(caches.open(version + "fundamentals").then(function (e) { return e.addAll(["https://tza.red/"]) }).then(function () { console.log("WORKER: install completed") })) }); var urliLegal = { "127.0.0.1:8888": 1 }; self.addEventListener("fetch", function (e) { console.log(e.request.url), "GET" === e.request.method ? e.respondWith(caches.match(e.request).then(function (t) { if (!t) var n = fetch(e.request).then(function (t) { var n = t.clone(); return caches.open(version + "pages").then(function (t) { t.put(e.request, n) }).then(function () { }), t }, o).catch(o); return t || n; function o() { return console.log("WORKER: fetch request failed in both cache and network."), new Response("<h1>Service Unavailable</h1>", { status: 503, statusText: "Service Unavailable", headers: new Headers({ "Content-Type": "text/html" }) }) } })) : console.log("WORKER: fetch event ignored.", e.request.method, e.request.url) }), self.addEventListener("activate", function (e) { console.log("WORKER: activate event in progress."), e.waitUntil(caches.keys().then(function (e) { return Promise.all(e.filter(function (e) { return !e.startsWith(version) }).map(function (e) { return caches.delete(e) })) }).then(function () { console.log("WORKER: activate completed.") })) });